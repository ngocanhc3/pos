/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vn.edu.coffee.views.tablefood;

import javax.swing.JFrame;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import vn.edu.coffee.controllers.TableFoodCtrl;
import vn.edu.coffee.events.MyActionEvent;
import vn.edu.coffee.models.TableFood;
import vn.edu.coffee.views.BaseFrame;

/**
 *
 * @author Ngoc Anh
 */
public class TableFoodUI extends BaseFrame {

    /**
     * Creates new form TableFoodUI
     */
    public TableFoodUI() {
        initComponents();
        afterInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnAdd = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnUpdate = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnDel = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbTableFood = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Table Management");

        jToolBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar1.setFloatable(true);

        btnAdd.setText("Add New");
        btnAdd.setFocusable(false);
        btnAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAdd);
        jToolBar1.add(jSeparator1);

        btnUpdate.setText("Update");
        btnUpdate.setActionCommand("");
        btnUpdate.setFocusable(false);
        btnUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUpdate.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jToolBar1.add(btnUpdate);
        jToolBar1.add(jSeparator2);

        btnDel.setText("Delete");
        btnDel.setToolTipText("");
        btnDel.setFocusable(false);
        btnDel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        jToolBar1.add(btnDel);
        jToolBar1.add(jSeparator3);

        jLabel1.setText("Search");
        jToolBar1.add(jLabel1);
        jToolBar1.add(txtSearch);

        btnSearch.setText("Search");
        btnSearch.setFocusable(false);
        btnSearch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSearch.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSearch);

        jToolBar2.setRollover(true);
        jToolBar1.add(jToolBar2);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.CENTER);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        tbTableFood.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "ID Bill", "Status"
            }
        ));
        tbTableFood.setSelectionBackground(new java.awt.Color(255, 102, 102));
        tbTableFood.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbTableFood.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbTableFood.setShowGrid(true);
        tbTableFood.setUpdateSelectionOnSort(false);
        jScrollPane1.setViewportView(tbTableFood);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        FormTableFood form = new FormTableFood(this, true,null);
        form.addEvent = new MyActionEvent<TableFood>() {
            @Override
            public void onAction(TableFood item) {
                ctrl.add(item);
                onLoadData();
            }
        };
        form.setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        onUpdate();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        onDelete();
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        onSearch();
    }//GEN-LAST:event_btnSearchActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JTable tbTableFood;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private DefaultTableModel tableModel;
    private TableFood tableFoodUpdate;
    private TableFoodCtrl ctrl;
    private void afterInitComponents() {
        ctrl = TableFoodCtrl.getInstance();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        this.tableModel = (DefaultTableModel) tbTableFood.getModel();
        this.tbTableFood.getSelectionModel().addListSelectionListener(new OnTableSelect());
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        TableColumn tcId = tbTableFood.getColumnModel().getColumn(0);
        tcId.setMaxWidth(50);
        tcId.setCellRenderer(centerRenderer);
        
        TableColumn tcSatus = tbTableFood.getColumnModel().getColumn(3);
        tcSatus.setMaxWidth(80);
        tcSatus.setCellRenderer(centerRenderer);
        onLoadData();
    }

    private void onLoadData() {
        this.tableFoodUpdate = null;
        setEnabledButton();
        this.tbTableFood.removeAll();
        this.tableModel.setRowCount(0);
        for (TableFood item : ctrl.find(txtSearch.getText())) {
            tableModel.addRow(new Object[]{
                item.getId(), item.getName(), 
                item.getIdBill(),
                item.isStatus() ? "Available" : "Unavailable"
            });
        }
        tbTableFood.revalidate();
        tbTableFood.repaint();
    }

    private void onUpdate() {
        FormTableFood form = new FormTableFood(this, true, this.tableFoodUpdate);
        form.addEvent = new MyActionEvent<TableFood>() {
            @Override
            public void onAction(TableFood item) {
                ctrl.update(item.getId(), item);
                onLoadData();
            }
        };
        form.setVisible(true);
    }

    private void onDelete() {
        if (tableFoodUpdate != null) {
            ctrl.remove(tableFoodUpdate.getId());
            showSuccess();
            onLoadData();
        }
    }

    private void onSearch() {
        onLoadData();
    }

    private class OnTableSelect implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {
            if (!e.getValueIsAdjusting()) {
                int inx = tbTableFood.getSelectedRow();
                if (inx != -1) {
                    long id = Long.parseLong(tableModel.getValueAt(inx, 0).toString());
                    tableFoodUpdate = ctrl.findById(id);
                    setEnabledButton();
                }
            }
        }
    }

    private void setEnabledButton() {
        boolean enabled = tableFoodUpdate != null;
        btnUpdate.setEnabled(enabled);
        btnDel.setEnabled(enabled);
    }

}
