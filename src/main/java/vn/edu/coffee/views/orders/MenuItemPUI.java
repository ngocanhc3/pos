/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vn.edu.coffee.views.orders;

import java.util.List;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import vn.edu.coffee.controllers.MenuItemCtrl;
import vn.edu.coffee.events.MyActionEvent;
import vn.edu.coffee.models.MenuItem;
import vn.edu.coffee.views.HelperUI;

/**
 *
 * @author Ngoc Anh
 */
public class MenuItemPUI extends javax.swing.JPanel {

    /**
     * Creates new form MenuItemPUI
     */
    public MenuItemPUI() {
        initComponents();
        afternitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbItems = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        lblTotal = new javax.swing.JLabel();
        btnItemAdd = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Menus");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 5));

        tbItems.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        tbItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Price"
            }
        ));
        tbItems.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbItems.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tbItems);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.setLayout(new java.awt.BorderLayout());

        lblTotal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTotal.setText("Total");
        lblTotal.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 1));
        jPanel3.add(lblTotal, java.awt.BorderLayout.CENTER);

        btnItemAdd.setBackground(new java.awt.Color(102, 255, 51));
        btnItemAdd.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnItemAdd.setForeground(new java.awt.Color(255, 51, 51));
        btnItemAdd.setText("+");
        btnItemAdd.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 1, 5, 1));
        btnItemAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItemAddActionPerformed(evt);
            }
        });
        jPanel3.add(btnItemAdd, java.awt.BorderLayout.PAGE_START);

        add(jPanel3, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void btnItemAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItemAddActionPerformed
        onItemAmountUp();
    }//GEN-LAST:event_btnItemAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnItemAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tbItems;
    // End of variables declaration//GEN-END:variables
    MenuItemCtrl ctrl;
    private DefaultTableModel tbModel;

    private void afternitComponents() {
        ctrl = new MenuItemCtrl();
        this.tbModel = (DefaultTableModel) tbItems.getModel();
        btnItemAdd.setEnabled(false);
        this.tbItems.getSelectionModel().addListSelectionListener(new OnTableSelect());
        HelperUI.setTbColAlignment(tbItems, 0, SwingConstants.CENTER, 50);
        HelperUI.setTbColAlignment(tbItems, 1, SwingConstants.LEFT, 0);
        HelperUI.setTbColAlignment(tbItems, 2, SwingConstants.RIGHT, 0);
        HelperUI.setRowEditDisable(tbItems);
        onLoadData();
    }

    List<MenuItem> items;

    private void onLoadData() {
        tbItems.removeAll();
        tbModel.setRowCount(0);
        items = ctrl.all();
        for (MenuItem menuItem : items) {

            tbModel.addRow(new Object[]{
                menuItem.getId(),
                menuItem.getName(),
                String.format("%(,.0f", menuItem.getPrice()),});
        }

        lblTotal.setText(String.format("Total: %d Records", items.size()));
        tbItems.revalidate();
        tbItems.repaint();
    }
    public MyActionEvent<MenuItem> setRowSelected;

    private MenuItem itemSelected;
    private void onItemAmountUp() {
        if (itemSelected != null && setRowSelected != null) {
            setRowSelected.onAction(itemSelected);
//            itemSelected = null;
            btnItemAdd.setEnabled(false);
            tbItems.repaint();
        }
    }

    private class OnTableSelect implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {
            if (!e.getValueIsAdjusting()) {
                int inx = tbItems.getSelectedRow();
                if (inx != -1) {
                    long id = Long.parseLong(tbModel.getValueAt(inx, 0).toString());
                    for (MenuItem item : items) {
                        if (item.getId() == id) {
                            itemSelected = item;
                            btnItemAdd.setEnabled(true);
                            break;
                        }
                    }
                }
            }
        }
    }
}
