/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vn.edu.coffee.views.orders;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JFrame;
import vn.edu.coffee.controllers.BillCtrl;
import vn.edu.coffee.controllers.OrderDetailCtrl;
import vn.edu.coffee.events.MyActionEvent;
import vn.edu.coffee.models.Bill;
import vn.edu.coffee.models.MenuItem;
import vn.edu.coffee.models.OrderDetail;
import vn.edu.coffee.models.TableFood;
import vn.edu.coffee.views.HelperUI;
import vn.edu.coffee.views.tablefood.TableFoodUI;
import vn.edu.coffee.views.menuitem.MenuItemUI;
import vn.edu.coffee.views.reports.OrderReportUI;

/**
 *
 * @author Ngoc Anh
 */
public class MainUI extends javax.swing.JFrame {

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
        afterInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        splitPaneRight = new javax.swing.JSplitPane();
        mbMenu = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        menuManage = new javax.swing.JMenu();
        miTable = new javax.swing.JMenuItem();
        miMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        miOrders = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        miAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("COFFEE SYSTEM POS");

        jSplitPane1.setDividerSize(10);
        jSplitPane1.setResizeWeight(0.6);

        splitPaneRight.setDividerSize(10);
        splitPaneRight.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        splitPaneRight.setResizeWeight(0.5);
        jSplitPane1.setRightComponent(splitPaneRight);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        menuFile.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Exit");
        jMenuItem1.setToolTipText("");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onExit(evt);
            }
        });
        menuFile.add(jMenuItem1);

        mbMenu.add(menuFile);

        menuManage.setText("Manage");
        menuManage.setActionCommand("");

        miTable.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        miTable.setText("Tables");
        miTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miTableActionPerformed(evt);
            }
        });
        menuManage.add(miTable);

        miMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        miMenuItem.setText("MenuItems");
        miMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miMenuItemActionPerformed(evt);
            }
        });
        menuManage.add(miMenuItem);

        mbMenu.add(menuManage);

        jMenu1.setText("Report");

        miOrders.setText("Orders");
        miOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOrdersActionPerformed(evt);
            }
        });
        jMenu1.add(miOrders);

        mbMenu.add(jMenu1);

        jMenu2.setText("Help");

        miAbout.setText("About");
        jMenu2.add(miAbout);

        mbMenu.add(jMenu2);

        setJMenuBar(mbMenu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onExit(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onExit
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_onExit

    private void miTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miTableActionPerformed
        new TableFoodUI().setVisible(true);
    }//GEN-LAST:event_miTableActionPerformed

    private void miMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miMenuItemActionPerformed
        new MenuItemUI().setVisible(true);
    }//GEN-LAST:event_miMenuItemActionPerformed

    private void miOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOrdersActionPerformed
        new OrderReportUI().setVisible(true);
    }//GEN-LAST:event_miOrdersActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JMenuBar mbMenu;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuManage;
    private javax.swing.JMenuItem miAbout;
    private javax.swing.JMenuItem miMenuItem;
    private javax.swing.JMenuItem miOrders;
    private javax.swing.JMenuItem miTable;
    private javax.swing.JSplitPane splitPaneRight;
    // End of variables declaration//GEN-END:variables

    private TableFoodPUI uiFood;
    private MenuItemPUI uiMenuItem;
    private OrderDetailPUI uiOrderDetail;

    private MainUI self;

    private BillCtrl billCtrl;
    private OrderDetailCtrl orderCtrl;
    private TableFood tableFood;

    private void afterInitComponents() {
        billCtrl = new BillCtrl();
        orderCtrl = new OrderDetailCtrl();
        setLocationRelativeTo(null);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        uiMenuItem = new MenuItemPUI();
        uiMenuItem.setRowSelected = new OnMenuItemSelected();
        uiFood = new TableFoodPUI();
        uiFood.addTableClick(new OnTableSelected());
        uiOrderDetail = new OrderDetailPUI();
        uiOrderDetail.onOrderCheckOut = new OnOrderCheckout();
        jSplitPane1.setLeftComponent(uiFood);
        splitPaneRight.setLeftComponent(uiMenuItem);
        splitPaneRight.setRightComponent(uiOrderDetail);
        self = this;
    }

    // EVENTS
    private class OnOrderCheckout implements MyActionEvent<TableFood> {

        @Override
        public void onAction(TableFood table) {
            if (table != null) {
                boolean rs = billCtrl.checkout(table.getId(), table.getIdBill());
                if (rs) {
                    HelperUI.showSuccess(self);
                    tableFood = null;
                    uiFood.onLoadData();
                    uiOrderDetail.onLoadData(null);
                } else {
                    HelperUI.showError(self);
                }
            }

        }
    }

    private class OnMenuItemSelected implements MyActionEvent<MenuItem> {

        @Override
        public void onAction(MenuItem item) {
            if (tableFood != null) {
                orderCtrl.add(new OrderDetail(tableFood.getIdBill(), item, 1));
                uiOrderDetail.onLoadData(tableFood);

            }
        }
    }

    private class OnTableSelected implements MyActionEvent<TableFood> {

        @Override
        public void onAction(TableFood item) {
            tableFood = item;
            OrderConfirmDialog dialog = new OrderConfirmDialog(self, item.getName(), new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    long billId = billCtrl.checkin(tableFood.getId(), new Bill());
                    if (billId > 0) {
                        tableFood.setIdBill(billId);
                        uiOrderDetail.onLoadData(tableFood);
                        uiFood.onLoadData();
                    }
                }

            });
            if (tableFood.getIdBill() == 0) {
                dialog.setVisible(true);
            } else {
                uiOrderDetail.onLoadData(tableFood);
            }
        }

    }
}
